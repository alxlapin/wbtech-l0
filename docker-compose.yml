services:
  app:
    build: .
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - '8080:8080'

  migrate:
    image: migrate/migrate
    volumes:
      - ./db/migrations:/migrations:rw
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:?POSTGRES_DB environment variable must be set}
      POSTGRES_USER: ${POSTGRES_USER:?POSTGRES_USER environment variable must be set}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:?POSTGRES_PASSWORD environment variable must be set}
    healthcheck:
      test: [ "CMD", "pg_isready", "-d", "${POSTGRES_DB}", "-U", "${POSTGRES_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    volumes:
      - pg-data:/var/lib/postgresql/data
    ports:
      - '5432:5432'

volumes:
  pg-data: